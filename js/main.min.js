const books = [],
  RENDER_EVENTS = "render-book",
  STORAGE_KEY = "BOOKS_APPS";
document.addEventListener("DOMContentLoaded", () => {
  let a = document.getElementById("inputBookTitle"),
    b = document.getElementById("inputBookAuthor"),
    c = document.getElementById("inputBookYear"),
    d = document.getElementById("bookSubmit");
  document.getElementById("inputBook").addEventListener("input", () => {
    "" !== a.value && "" !== b.value && "" !== c.value
      ? (d.removeAttribute("disabled"),
        (d.style.backgroundColor = "cornflowerblue"))
      : (d.setAttribute("disabled", ""), (d.style.backgroundColor = "#aeaeae"));
  }),
    document.getElementById("inputBook").addEventListener("submit", (a) => {
      a.preventDefault();
      let b = document.getElementById("bookId").value;
      b ? updateBook() : createBook(),
        d.setAttribute("disabled", ""),
        (d.style.backgroundColor = "#aeaeae"),
        a.target.reset();
    }),
    document
      .getElementById("searchBookTitle")
      .addEventListener("keyup", (a) => {
        let b = a.target.value.toLowerCase();
        document.querySelectorAll(".book_item").forEach((a) => {
          let c = a.firstChild.textContent.toLocaleLowerCase();
          -1 != c.indexOf(b)
            ? a.setAttribute("style", "display: block;")
            : a.setAttribute("style", "display: none !important;");
        });
      }),
    document.getElementById("searchBook").addEventListener("submit", (a) => {
      a.preventDefault();
    }),
    isStorageExist() && loadDataFromStorage();
}),
  document.addEventListener(RENDER_EVENTS, () => {
    let a = document.getElementById("incompleteBookshelfList");
    a.innerHTML = "";
    let b = document.getElementById("completeBookshelfList");
    for (let c of ((b.innerHTML = ""), books)) {
      let d = makeBook(c);
      c.isCompleted ? b.append(d) : a.append(d);
    }
    saveData();
  });
const createBook = () => {
    let a = getValueInputBook(),
      b = {
        id: generateId(),
        title: a.title,
        author: a.author,
        year: a.year,
        isCompleted: a.isCompleted,
      };
    books.push(b), document.dispatchEvent(new Event(RENDER_EVENTS));
  },
  editBook = (b) => {
    let a = books.find((a) => a.id === b);
    (document.getElementById("bookId").value = a.id),
      (document.getElementById("inputBookTitle").value = a.title),
      (document.getElementById("inputBookAuthor").value = a.author),
      (document.getElementById("inputBookYear").value = a.year),
      (document.getElementById("inputBookIsComplete").checked = a.isCompleted),
      (document.getElementById("bookSubmit").innerText = "Edit Book"),
      document.getElementById("bookSubmit").removeAttribute("disabled"),
      (document.getElementById("bookSubmit").style.backgroundColor = "#6495ED");
  },
  updateBook = () => {
    let a = getValueInputBook(),
      b = books.findIndex((b) => b.id === parseInt(a.id));
    (books[b] = {
      ...books[b],
      title: a.title,
      author: a.author,
      year: a.year,
      isCompleted: a.isCompleted,
    }),
      document.dispatchEvent(new Event(RENDER_EVENTS)),
      (a.button.innerHTML =
        "Masukkan Buku ke rak <strong>Belum selesai dibaca</strong>");
  },
  destroyBook = (b) => {
    if (confirm("Are you sure to delete this data?")) {
      let a = books.findIndex((a) => a.id === b);
      books.splice(a, 1);
    }
    document.dispatchEvent(new Event(RENDER_EVENTS));
  },
  toggleBook = (b) => {
    let a = books.find((a) => a.id === b);
    (a.isCompleted = !a.isCompleted),
      document.dispatchEvent(new Event(RENDER_EVENTS));
  },
  generateId = () => +new Date(),
  getValueInputBook = () => {
    let a = {};
    return (
      (a.id = document.getElementById("bookId").value),
      (a.title = document.getElementById("inputBookTitle").value),
      (a.author = document.getElementById("inputBookAuthor").value),
      (a.year = document.getElementById("inputBookYear").value),
      (a.isCompleted = document.getElementById("inputBookIsComplete").checked),
      (a.button = document.getElementById("bookSubmit")),
      a
    );
  },
  makeBook = (b) => {
    let g = document.createElement("h3");
    g.innerText = b.title;
    let i = document.createElement("p");
    i.innerText = `Penulis: ${b.author}`;
    let j = document.createElement("p");
    j.innerText = `Tahun: ${b.year}`;
    let a = document.createElement("div");
    a.classList.add("action");
    let c = document.createElement("button");
    c.classList.add("btn-warning"),
      (c.innerHTML = "Edit Buku"),
      c.addEventListener("click", () => {
        editBook(b.id);
      });
    let d = document.createElement("button");
    d.classList.add("btn-danger"),
      (d.innerText = "Hapus Buku"),
      d.addEventListener("click", () => {
        destroyBook(b.id);
      });
    let h = document.createElement("article");
    if ((h.classList.add("book_item"), b.isCompleted)) {
      g.style.textDecoration = "line-through";
      let e = document.createElement("button");
      e.classList.add("btn-success"),
        (e.innerText = "Belum selesai dibaca"),
        e.addEventListener("click", () => {
          toggleBook(b.id);
        }),
        a.append(e);
    } else {
      let f = document.createElement("button");
      f.classList.add("btn-success"),
        (f.innerHTML = "Selesai Dibaca"),
        f.addEventListener("click", () => {
          toggleBook(b.id);
        }),
        a.append(f);
    }
    return a.append(c, d), h.append(g, i, j, a), h;
  };
function saveData() {
  if (isStorageExist()) {
    let a = JSON.stringify(books);
    localStorage.setItem(STORAGE_KEY, a);
  }
}
const isStorageExist = () => !0,
  loadDataFromStorage = () => {
    let b = localStorage.getItem(STORAGE_KEY),
      a = JSON.parse(b);
    if (null !== a) for (let c of a) books.push(c);
    document.dispatchEvent(new Event(RENDER_EVENTS));
  };
